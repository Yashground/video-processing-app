[{"start":0,"end":2440,"text":"How can software handle billions of payments","language":"english"},{"start":2440,"end":5400,"text":"without missing a single transaction?","language":"english"},{"start":8439,"end":11800,"text":"Today, we're gonna talk about the Uber engineer's solution","language":"english"},{"start":11800,"end":13840,"text":"to billions and billions of payments","language":"english"},{"start":13840,"end":16280,"text":"and easily explain how it all works.","language":"english"},{"start":17120,"end":18440,"text":"So, let's go.","language":"english"},{"start":24799,"end":27399,"text":"Now, we all know how Uber works.","language":"english"},{"start":27399,"end":29200,"text":"Click a button that pays suggested money","language":"english"},{"start":29200,"end":31399,"text":"for a lift from one place to another,","language":"english"},{"start":31399,"end":32880,"text":"wait for your driver,","language":"english"},{"start":32880,"end":35279,"text":"get in the car and arrive at your destination,","language":"english"},{"start":35279,"end":38279,"text":"leave, and then Uber pays the money the driver's owed.","language":"english"},{"start":38279,"end":39639,"text":"Pretty simple, right?","language":"english"},{"start":39639,"end":43240,"text":"Add 100 million users, billions of rides,","language":"english"},{"start":43240,"end":46040,"text":"and hundreds of billions worth of money","language":"english"},{"start":46040,"end":47560,"text":"being passed around later,","language":"english"},{"start":47560,"end":51439,"text":"and then our easy solution is no longer an easy solution.","language":"english"},{"start":51439,"end":53400,"text":"As Uber grew and grew in popularity,","language":"english"},{"start":53400,"end":55200,"text":"they would evolve their tech stack","language":"english"},{"start":55200,"end":58000,"text":"going from a monolith application,","language":"english"},{"start":58040,"end":61040,"text":"aka just one big application they deployed,","language":"english"},{"start":61040,"end":62439,"text":"to a microservice one,","language":"english"},{"start":62439,"end":66000,"text":"which is like thousands of applications all over the place.","language":"english"},{"start":66000,"end":67919,"text":"They'd switch to Postgres and MySQL","language":"english"},{"start":67919,"end":70599,"text":"and just build technology everywhere around it.","language":"english"},{"start":70599,"end":71760,"text":"However, if there's one thing","language":"english"},{"start":71760,"end":74680,"text":"that you just can't mess up in your tech stack,","language":"english"},{"start":74680,"end":76199,"text":"it's what's dealing with money.","language":"english"},{"start":76199,"end":78519,"text":"And their system was messing up big time.","language":"english"},{"start":78519,"end":80959,"text":"First, it was just beyond unstable.","language":"english"},{"start":80959,"end":82519,"text":"The system was fragmented","language":"english"},{"start":82519,"end":84720,"text":"in multiple different areas and services.","language":"english"},{"start":84720,"end":87199,"text":"Transactions were really, really slow.","language":"english"},{"start":87239,"end":88839,"text":"Then reconciling transactions","language":"english"},{"start":88839,"end":90680,"text":"was just an absolute nightmare.","language":"english"},{"start":90680,"end":93599,"text":"Payment discrepancies and just major delays were everywhere.","language":"english"},{"start":93599,"end":95480,"text":"Imagine being an Uber driver,","language":"english"},{"start":95480,"end":98080,"text":"driving and giving rides for two days straight,","language":"english"},{"start":98080,"end":100199,"text":"then a cyber attack happens,","language":"english"},{"start":100199,"end":104000,"text":"and then all your payments that you've been expecting","language":"english"},{"start":104000,"end":105720,"text":"for the last two days is just gone.","language":"english"},{"start":105720,"end":107959,"text":"Nowhere to be seen, nowhere collected.","language":"english"},{"start":107959,"end":111080,"text":"So they rebuilt their payment system from scratch.","language":"english"},{"start":111080,"end":115360,"text":"First, they switched their system to a job-slash-order system.","language":"english"},{"start":115360,"end":116400,"text":"The job, in this case,","language":"english"},{"start":116400,"end":119400,"text":"represents the trip that you go on or an Uber Eats order.","language":"english"},{"start":119400,"end":121480,"text":"This job system allowed flexibility","language":"english"},{"start":121480,"end":124480,"text":"in having multiple orders assigned to the same job.","language":"english"},{"start":124480,"end":125879,"text":"So, for example,","language":"english"},{"start":125879,"end":128600,"text":"asking to stop at McDonald's before getting home.","language":"english"},{"start":128600,"end":129800,"text":"We've all been there.","language":"english"},{"start":129800,"end":131160,"text":"It's okay to admit it.","language":"english"},{"start":131160,"end":132960,"text":"Inside these orders are entries,","language":"english"},{"start":132960,"end":136479,"text":"which represents money moving from a payer to a payee.","language":"english"},{"start":136479,"end":138679,"text":"The sum, always zero.","language":"english"},{"start":138679,"end":140960,"text":"No creating or destroying money.","language":"english"},{"start":140960,"end":143479,"text":"So if I paid $20 for an Uber ride,","language":"english"},{"start":143479,"end":145759,"text":"it would come up in two different items.","language":"english"},{"start":145759,"end":147600,"text":"The trip fare, which is $18,","language":"english"},{"start":147600,"end":149679,"text":"and the service fee, which is $2.","language":"english"},{"start":149679,"end":151600,"text":"This then goes into the Uber driver's account","language":"english"},{"start":151600,"end":152960,"text":"and then Uber's account.","language":"english"},{"start":152960,"end":156320,"text":"Trip fare, 18, service fee, $2.","language":"english"},{"start":156320,"end":159279,"text":"This essentially is how double-entry accounting works.","language":"english"},{"start":159279,"end":160919,"text":"Credit and debit.","language":"english"},{"start":160919,"end":163679,"text":"I've covered so many different types of databases","language":"english"},{"start":163679,"end":164880,"text":"on my channel in the past,","language":"english"},{"start":164880,"end":167559,"text":"but none have specifically been designed","language":"english"},{"start":167559,"end":171279,"text":"to tailor towards the need of money or finance.","language":"english"},{"start":171279,"end":174639,"text":"So, like, how would you even do that in the first place?","language":"english"},{"start":174639,"end":178199,"text":"A ledger, a line-by-line table of your transactions.","language":"english"},{"start":178199,"end":180639,"text":"Don't ask the crypto people what a ledger means.","language":"english"},{"start":180639,"end":182720,"text":"What makes ledgers still popular to this day","language":"english"},{"start":182720,"end":184559,"text":"is that it's the only way to truly know","language":"english"},{"start":184559,"end":185759,"text":"where you're financially.","language":"english"},{"start":185759,"end":189839,"text":"If my bank account starts at $100 and ends at $1,000,","language":"english"},{"start":189839,"end":193759,"text":"but the purchases and deposits don't end in $1,000,","language":"english"},{"start":193759,"end":196800,"text":"well, some sus stuff is happening in my bank account.","language":"english"},{"start":196800,"end":200039,"text":"Doing two seconds of research on this,","language":"english"},{"start":200039,"end":203000,"text":"I can see that, you know, Postgres or MySQL","language":"english"},{"start":203000,"end":206039,"text":"is clearly capable of doing something like this.","language":"english"},{"start":206039,"end":209000,"text":"So why isn't it suitable for finance?","language":"english"},{"start":209000,"end":212279,"text":"Well, first, most databases aren't immutable.","language":"english"},{"start":212279,"end":214479,"text":"If I wanted to change my name on any website,","language":"english"},{"start":214479,"end":215919,"text":"once I change it on the form,","language":"english"},{"start":215919,"end":218360,"text":"the database goes to the existing entry","language":"english"},{"start":218360,"end":221399,"text":"and then updates it, removing the previous value.","language":"english"},{"start":221399,"end":223720,"text":"This is because it is immutable.","language":"english"},{"start":223720,"end":226360,"text":"If I were to try this on an immutable database,","language":"english"},{"start":226360,"end":228199,"text":"it would have to create a brand new row","language":"english"},{"start":228199,"end":232199,"text":"with the new information and duplicate existing information.","language":"english"},{"start":232199,"end":233119,"text":"Then in the UI,","language":"english"},{"start":233119,"end":234800,"text":"I would have to grab the latest version of this.","language":"english"},{"start":234800,"end":239240,"text":"So obviously this is just not good and so wasteful.","language":"english"},{"start":239240,"end":241240,"text":"If you had a database of transactions","language":"english"},{"start":241240,"end":244080,"text":"and then they all equal to zero,","language":"english"},{"start":244080,"end":248080,"text":"and then some dingus deleted a row out of that database,","language":"english"},{"start":248080,"end":251720,"text":"well, you've forever screwed up the integrity of your books.","language":"english"},{"start":251720,"end":253720,"text":"This transaction is just gone forever.","language":"english"},{"start":253720,"end":256799,"text":"So an immutable system would force an append-only system,","language":"english"},{"start":256799,"end":258399,"text":"meaning that if a mistake happens,","language":"english"},{"start":258399,"end":261440,"text":"the correction is appended at the bottom of the database","language":"english"},{"start":261440,"end":263320,"text":"rather than deleting the record completely.","language":"english"},{"start":263320,"end":265679,"text":"For example, if I were to document a transaction,","language":"english"},{"start":265679,"end":267679,"text":"I could buy lunch for $10.","language":"english"},{"start":267679,"end":269880,"text":"That's negative $10 from my account.","language":"english"},{"start":269880,"end":272760,"text":"However, the deli accidentally charged me $15.","language":"english"},{"start":272760,"end":275179,"text":"So in my account, you see negative $15.","language":"english"},{"start":275179,"end":277279,"text":"Well, rather than just deleting the records","language":"english"},{"start":277279,"end":281119,"text":"and trying again, the deli has to refund me $5,","language":"english"},{"start":281119,"end":283320,"text":"which then turns into a credit on my account.","language":"english"},{"start":283320,"end":286679,"text":"You fix things by adding or subtracting to the end,","language":"english"},{"start":286679,"end":288279,"text":"not by replacing.","language":"english"},{"start":288279,"end":291160,"text":"Popular open source options exist like ImmuDB,","language":"english"},{"start":291880,"end":294440,"text":"but at scale, Uber made the classic programming decision","language":"english"},{"start":294440,"end":296920,"text":"to make their own version from scrap.","language":"english"},{"start":296920,"end":299399,"text":"So they created LedgerStore.","language":"english"},{"start":303279,"end":304760,"text":"LedgerStore is an application layer","language":"english"},{"start":304760,"end":306959,"text":"that sits above existing technologies","language":"english"},{"start":306959,"end":308799,"text":"like NoSQL databases.","language":"english"},{"start":308799,"end":311160,"text":"It specifically adds three core concepts.","language":"english"},{"start":311160,"end":313480,"text":"Ceiling closes a time range of changes.","language":"english"},{"start":313480,"end":316359,"text":"This means that transactions that happened last month,","language":"english"},{"start":316359,"end":318739,"text":"you can look at and validate that they are correct,","language":"english"},{"start":318739,"end":320440,"text":"making them now read-only.","language":"english"},{"start":320440,"end":321640,"text":"Uber specifically mentioned","language":"english"},{"start":321640,"end":323640,"text":"that they have 30-minute spans of seals.","language":"english"},{"start":323640,"end":326640,"text":"Manifests are files generated in the sealing process.","language":"english"},{"start":326640,"end":328000,"text":"This is a security measure to show","language":"english"},{"start":328000,"end":330279,"text":"that only LedgerStore can access sealed transactions","language":"english"},{"start":330279,"end":331119,"text":"in the past.","language":"english"},{"start":331119,"end":331940,"text":"Just remember though,","language":"english"},{"start":331940,"end":333760,"text":"transactions are happening every second.","language":"english"},{"start":333760,"end":335440,"text":"So they use Apache Kafka,","language":"english"},{"start":335440,"end":337200,"text":"which helps the streaming of this data","language":"english"},{"start":337200,"end":338440,"text":"in real time to calculate.","language":"english"},{"start":338440,"end":340700,"text":"And revisions is for when sometimes the data","language":"english"},{"start":340700,"end":343600,"text":"needs to be corrected in an already closed time range.","language":"english"},{"start":343600,"end":344679,"text":"Revision is like a table","language":"english"},{"start":344679,"end":346359,"text":"that shows the corrections that have happened","language":"english"},{"start":346359,"end":349200,"text":"while also making the previous additions queryable.","language":"english"},{"start":349200,"end":350760,"text":"And LedgerStore, it was great,","language":"english"},{"start":350760,"end":354540,"text":"but Uber had a really, really big problem.","language":"english"},{"start":354540,"end":359540,"text":"You see, LedgerStore was built to be unopinionated","language":"english"},{"start":360079,"end":361980,"text":"about its underlying technology.","language":"english"},{"start":361980,"end":364320,"text":"So when they moved to their new internal database,","language":"english"},{"start":364320,"end":369320,"text":"they had to migrate over 250 billion records.","language":"english"},{"start":369320,"end":372239,"text":"And so they only had two options,","language":"english"},{"start":372239,"end":375540,"text":"process all of this 300 terabyte of data in one go,","language":"english"},{"start":375540,"end":377959,"text":"and then just dump it into their new database","language":"english"},{"start":377959,"end":380320,"text":"or break down historical data into parts","language":"english"},{"start":380320,"end":382000,"text":"and process them individually","language":"english"},{"start":382000,"end":383720,"text":"and create checkpoints throughout.","language":"english"},{"start":383720,"end":387559,"text":"The issue with doing number one is that with such big data,","language":"english"},{"start":387559,"end":389519,"text":"at any point that it goes wrong,","language":"english"},{"start":389519,"end":392160,"text":"you have to restart the entire process.","language":"english"},{"start":392160,"end":394320,"text":"Think about installing a software for a long time","language":"english"},{"start":394320,"end":396239,"text":"and then it just fails on the last step.","language":"english"},{"start":396239,"end":400220,"text":"So they went with option two and here's how it worked.","language":"english"},{"start":403279,"end":405220,"text":"A worker boots up and reads the checkpoint","language":"english"},{"start":405220,"end":407519,"text":"of where the process needs to be started from.","language":"english"},{"start":408320,"end":410799,"text":"It then goes to cold storage where the data lives","language":"english"},{"start":410799,"end":414399,"text":"and processes this data and moves it to the new database.","language":"english"},{"start":414399,"end":415959,"text":"It then updates the checkpoint to say","language":"english"},{"start":415959,"end":418440,"text":"that the partition it filled out is successful","language":"english"},{"start":418440,"end":420239,"text":"so it doesn't get repeated.","language":"english"},{"start":420239,"end":422600,"text":"It then stores this in a metadata database","language":"english"},{"start":422600,"end":424760,"text":"so that other simultaneous workers","language":"english"},{"start":424760,"end":426480,"text":"don't work on the same ones.","language":"english"},{"start":426480,"end":428920,"text":"And this process only allowed that data","language":"english"},{"start":428920,"end":431799,"text":"to take a couple of weeks and saved on a lot of money.","language":"english"},{"start":431799,"end":434279,"text":"So we have our historical data taken care of","language":"english"},{"start":434279,"end":435600,"text":"on a separate database,","language":"english"},{"start":435600,"end":438279,"text":"but how do we put this over live","language":"english"},{"start":438279,"end":441799,"text":"onto one of the busiest applications of all time?","language":"english"},{"start":445380,"end":448040,"text":"This is when Uber introduced the Shadowrider.","language":"english"},{"start":448040,"end":451000,"text":"The Shadowrider sits in between two databases,","language":"english"},{"start":451000,"end":454320,"text":"the current one and the one they wanted to migrate over to.","language":"english"},{"start":454320,"end":455640,"text":"The Shadowrider pushes data","language":"english"},{"start":455640,"end":458820,"text":"to the main database as usual, synchronously,","language":"english"},{"start":458820,"end":461040,"text":"everything executed in order.","language":"english"},{"start":461040,"end":461959,"text":"To keep things fast,","language":"english"},{"start":461959,"end":463480,"text":"the Shadowrider pushes data","language":"english"},{"start":463480,"end":465600,"text":"to the new database asynchronously,","language":"english"},{"start":465600,"end":467440,"text":"meaning our system isn't dependent on","language":"english"},{"start":467440,"end":469079,"text":"if it saves right the second.","language":"english"},{"start":469079,"end":471079,"text":"But here's another issue.","language":"english"},{"start":471079,"end":473619,"text":"What happens if the items fail?","language":"english"},{"start":476399,"end":477399,"text":"Because it's asynchronous,","language":"english"},{"start":477399,"end":480720,"text":"we don't know if it's going to work or not work.","language":"english"},{"start":484119,"end":486480,"text":"To prevent this, they deployed a spot repair job","language":"english"},{"start":486480,"end":489000,"text":"to look at any issues and fix them on the spot.","language":"english"},{"start":489000,"end":492160,"text":"They also created a dual read and merge system.","language":"english"},{"start":492160,"end":494880,"text":"This reads both databases at the same time","language":"english"},{"start":494880,"end":496519,"text":"and compares the two requests.","language":"english"},{"start":496519,"end":498600,"text":"If the primary database had five records","language":"english"},{"start":498600,"end":500119,"text":"and the secondary had three,","language":"english"},{"start":500119,"end":502040,"text":"it would merge the objects together","language":"english"},{"start":502040,"end":504000,"text":"and save that to the secondary database","language":"english"},{"start":504000,"end":505239,"text":"and return to the user.","language":"english"},{"start":505239,"end":508079,"text":"This put the new database into production gradually","language":"english"},{"start":508079,"end":510279,"text":"to see how it handles under the pressure","language":"english"},{"start":510279,"end":511679,"text":"of a production system.","language":"english"},{"start":511679,"end":516039,"text":"But eventually, that leap of faith was needed to be done.","language":"english"},{"start":516599,"end":520119,"text":"So they finally decided to commit to the new databases","language":"english"},{"start":520119,"end":523239,"text":"and made the switch to Dockstore being the primary","language":"english"},{"start":523239,"end":525799,"text":"and then Dynamo being the secondary.","language":"english"},{"start":528479,"end":531520,"text":"Gradually, less requests were being read from Dynamo","language":"english"},{"start":531520,"end":534320,"text":"and Dockstore continued to grow and grow.","language":"english"},{"start":539320,"end":541119,"text":"And thank God for that.","language":"english"},{"start":541119,"end":543719,"text":"But why all of this work?","language":"english"},{"start":543960,"end":548080,"text":"But why all of this work just to change databases?","language":"english"},{"start":548080,"end":549280,"text":"When we talk about the ledger,","language":"english"},{"start":549280,"end":550960,"text":"we can think of it like a piece of paper","language":"english"},{"start":550960,"end":553280,"text":"with each row dedicated to a new entry.","language":"english"},{"start":553280,"end":556719,"text":"I mean, it makes sense for like 50 transactions,","language":"english"},{"start":556719,"end":560239,"text":"but what about trillions of transactions","language":"english"},{"start":560239,"end":563359,"text":"over billions of ledgers?","language":"english"},{"start":567280,"end":568200,"text":"Indexes.","language":"english"},{"start":570000,"end":571599,"text":"Now, imagine this scenario.","language":"english"},{"start":571599,"end":573440,"text":"You walk into a movie store","language":"english"},{"start":574119,"end":576320,"text":"and you want a copy of the movie, Jaws.","language":"english"},{"start":576320,"end":579039,"text":"The cashier says, one moment and one by one,","language":"english"},{"start":579039,"end":582000,"text":"make sure that each movie in a gigantic pile of movies","language":"english"},{"start":582000,"end":582960,"text":"is Jaws.","language":"english"},{"start":582960,"end":584640,"text":"I mean, you would be there forever.","language":"english"},{"start":584640,"end":585479,"text":"It's just stupid.","language":"english"},{"start":587599,"end":590640,"text":"An index in a database would be categorizing each movie","language":"english"},{"start":590640,"end":592440,"text":"by the first letter or by genre.","language":"english"},{"start":592440,"end":596320,"text":"So if I asked for Jaws, you already know to look at aisle J.","language":"english"},{"start":596320,"end":599440,"text":"But in this case, 26, I think 26,","language":"english"},{"start":599440,"end":602080,"text":"indexes are just not gonna cut it.","language":"english"},{"start":602080,"end":605320,"text":"And this is why Uber has trillions of indexes","language":"english"},{"start":605320,"end":607679,"text":"that they have managed in their database systems.","language":"english"},{"start":607679,"end":608840,"text":"And there's different types.","language":"english"},{"start":608840,"end":610440,"text":"A strongly consistent index","language":"english"},{"start":610440,"end":612640,"text":"is used to handle credit card authorization.","language":"english"},{"start":612640,"end":615280,"text":"When you use Uber, your credit card has a hold on it","language":"english"},{"start":615280,"end":616559,"text":"until the end of your trip.","language":"english"},{"start":616559,"end":619159,"text":"If the database isn't able to look up the hold fast,","language":"english"},{"start":619159,"end":622359,"text":"it risks charging you again and continuing this hold.","language":"english"},{"start":622359,"end":623239,"text":"Yikes.","language":"english"},{"start":623239,"end":626000,"text":"This is done with an intricate write and read process.","language":"english"},{"start":626000,"end":628080,"text":"First, Ledger Store preps the indexes","language":"english"},{"start":628080,"end":630119,"text":"that will be inserting a database record.","language":"english"},{"start":630119,"end":632000,"text":"Once it's prepped, it writes the record","language":"english"},{"start":632919,"end":634719,"text":"and if it's successful, will commit the indexes needed.","language":"english"},{"start":634719,"end":638119,"text":"They found that their indexes get stuck in the intent phase.","language":"english"},{"start":638119,"end":639520,"text":"So to counteract this,","language":"english"},{"start":639520,"end":641840,"text":"if they read that there is a record in the database,","language":"english"},{"start":641840,"end":643239,"text":"they commit the index,","language":"english"},{"start":643239,"end":645960,"text":"or if it doesn't, it rolls back the index.","language":"english"},{"start":645960,"end":648400,"text":"A lot goes into making this extremely reliable.","language":"english"},{"start":648400,"end":649960,"text":"Eventual consistent indexes","language":"english"},{"start":649960,"end":651440,"text":"is for parts of the application","language":"english"},{"start":651440,"end":653239,"text":"that doesn't require extreme precision.","language":"english"},{"start":653239,"end":655960,"text":"So these could be places like previous ride screens","language":"english"},{"start":655960,"end":657799,"text":"where waiting a little bit is fine","language":"english"},{"start":657799,"end":659719,"text":"as long as you get the end result.","language":"english"},{"start":659719,"end":661919,"text":"Think about a ledger for a second.","language":"english"},{"start":662840,"end":665280,"text":"One of the biggest key columns you could probably think of,","language":"english"},{"start":665280,"end":668440,"text":"if not the most important one, is date and time.","language":"english"},{"start":668440,"end":670599,"text":"Time range indexes does exactly that.","language":"english"},{"start":670599,"end":672760,"text":"It's able to index within a certain timeframe","language":"english"},{"start":672760,"end":673840,"text":"of ledger entries.","language":"english"},{"start":673840,"end":674760,"text":"When working with data,","language":"english"},{"start":674760,"end":677960,"text":"this is a great way to offload storage that is really old.","language":"english"},{"start":677960,"end":680719,"text":"In this case, you can move data from hot storage,","language":"english"},{"start":680719,"end":684119,"text":"think like OneDrive, you know, easily accessible files,","language":"english"},{"start":684119,"end":685520,"text":"all the way to cold storage,","language":"english"},{"start":685520,"end":688119,"text":"which is just, you know, really cheap storage","language":"english"},{"start":688119,"end":690200,"text":"that takes a while to get your files.","language":"english"},{"start":690200,"end":693880,"text":"So we now know that these types of indexes exist, great,","language":"english"},{"start":693880,"end":697840,"text":"but how do we manage 2 trillion of them?","language":"english"},{"start":697840,"end":699559,"text":"After the index is created,","language":"english"},{"start":699559,"end":702239,"text":"it backfills itself with historical data.","language":"english"},{"start":702239,"end":705679,"text":"This is done in batches to save on data download speeds,","language":"english"},{"start":705679,"end":707640,"text":"then is validated for completeness.","language":"english"},{"start":707640,"end":710520,"text":"This is done by using a checksum comparison on the data.","language":"english"},{"start":710520,"end":712280,"text":"It then decommissions this index","language":"english"},{"start":712280,"end":715479,"text":"so that the new index can get started and move along.","language":"english"},{"start":717640,"end":719599,"text":"The idea that so much technology","language":"english"},{"start":719599,"end":723280,"text":"goes into what we developers or even users take for granted","language":"english"},{"start":723280,"end":725080,"text":"is just absolutely insane.","language":"english"},{"start":725080,"end":727960,"text":"It just takes another level of engineering","language":"english"},{"start":727960,"end":729479,"text":"in order to figure all this stuff out.","language":"english"},{"start":729479,"end":731440,"text":"There's a lot of cloud services that exist","language":"english"},{"start":731440,"end":735200,"text":"that specialize in transitioning your database system","language":"english"},{"start":735200,"end":737919,"text":"over from one cloud provider or on-premise","language":"english"},{"start":737919,"end":742159,"text":"to another cloud or on-premise database.","language":"english"},{"start":742159,"end":743719,"text":"But at the scale of Uber,","language":"english"},{"start":743719,"end":745799,"text":"you have to figure out your own solutions","language":"english"},{"start":745799,"end":748280,"text":"because what works for you","language":"english"},{"start":748280,"end":750400,"text":"isn't something that's gonna work for everybody","language":"english"},{"start":750400,"end":752039,"text":"unless you're Lyft or something.","language":"english"},{"start":752039,"end":754119,"text":"A big shout out to the three engineers","language":"english"},{"start":754119,"end":755919,"text":"from the Uber engineering team","language":"english"},{"start":755919,"end":757960,"text":"that have written the articles that I've used","language":"english"},{"start":757960,"end":759799,"text":"to reference for this video.","language":"english"},{"start":759799,"end":760640,"text":"Literally without that,","language":"english"},{"start":760640,"end":762039,"text":"I wouldn't be able to make this video,","language":"english"},{"start":762039,"end":764000,"text":"but also I just think it's so cool","language":"english"},{"start":764000,"end":765320,"text":"that they can be vulnerable","language":"english"},{"start":765320,"end":768640,"text":"about the different processes they've tried, failed,","language":"english"},{"start":768640,"end":770719,"text":"and just, you know, done.","language":"english"},{"start":770719,"end":773119,"text":"What's the biggest transition you ever had to make?","language":"english"},{"start":773119,"end":774200,"text":"Let me know in the comments below","language":"english"},{"start":774200,"end":776119,"text":"and don't forget to subscribe to the channel.","language":"english"},{"start":776119,"end":777080,"text":"Peace out, coders.","language":"english"}]